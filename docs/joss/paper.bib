@misc{pyspbla,
    author = {Orachev, Egor and Karpenko, Maria and Alimov, Pavel and Grigorev, Semyon},
    title = {SPbLA: sparse Boolean linear algebra for CPU, Cuda and OpenCL computations},
    year = 2021,
    url = {https://pypi.org/project/pyspbla/},
    note = {Version 1.0.0}
}

@article{article:cfpq_and_rdf_analysis,
    author    = {Xiaowang Zhang and
               Zhiyong Feng and
               Xin Wang and
               Guozheng Rao and
               Wenrui Wu},
    title     = {Context-Free Path Queries on {RDF} Graphs},
    journal   = {CoRR},
    volume    = {abs/1506.00743},
    year      = {2015},
    url       = {http://arxiv.org/abs/1506.00743},
    archivePrefix = {arXiv},
    eprint    = {1506.00743},
    timestamp = {Fri, 20 Mar 2020 11:46:30 +0100},
    biburl    = {https://dblp.org/rec/journals/corr/ZhangFWR15.bib},
    bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{article:rna_prediction,
    author = {Anderson, James and Novák, Adám and Sükösd, Zsuzsanna and Golden, Michael and Arunapuram, Preeti and Edvardsson, Ingolfur and Hein, Jotun},
    year = {2013},
    month = {05},
    pages = {149},
    title = {Quantifying variances in comparative RNA secondary structure prediction},
    volume = {14},
    journal = {BMC bioinformatics},
    doi = {10.1186/1471-2105-14-149}
}

@article{article:dyck_cfl_code_analysis,
    author = {Zhang, Qirun and Lyu, Michael R. and Yuan, Hao and Su, Zhendong},
    title = {Fast Algorithms for Dyck-CFL-Reachability with Applications to Alias Analysis},
    year = {2013},
    issue_date = {June 2013},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {48},
    number = {6},
    issn = {0362-1340},
    url = {https://doi.org/10.1145/2499370.2462159},
    doi = {10.1145/2499370.2462159},
    abstract = {The context-free language (CFL) reachability problem is a well-known fundamental formulation in program analysis. In practice, many program analyses, especially pointer analyses, adopt a restricted version of CFL-reachability, Dyck-CFL-reachability, and compute on edge-labeled bidirected graphs. Solving the all-pairs Dyck-CFL-reachability on such bidirected graphs is expensive. For a bidirected graph with n nodes and m edges, the traditional dynamic programming style algorithm exhibits a subcubic time complexity for the Dyck language with k kinds of parentheses. When the underlying graphs are restricted to bidirected trees, an algorithm with O(n log n log k) time complexity was proposed recently. This paper studies the Dyck-CFL-reachability problems on bidirected trees and graphs. In particular, it presents two fast algorithms with O(n) and O(n + m log m) time complexities on trees and graphs respectively. We have implemented and evaluated our algorithms on a state-of-the-art alias analysis for Java. Results on standard benchmarks show that our algorithms achieve orders of magnitude speedup and consume less memory.},
    journal = {SIGPLAN Not.},
    month = jun,
    pages = {435–446},
    numpages = {12},
    keywords = {alias analysis, dyck-cfl-reachability}
}

@inproceedings{inproceedings:matrix_cfpq,
    author = {Azimov, Rustam and Grigorev, Semyon},
    year = {2018},
    month = {06},
    pages = {1-10},
    title = {Context-free path querying by matrix multiplication},
    doi = {10.1145/3210259.3210264}
}

@inbook{inbook:kronecker_cfpq_adbis,
    author = {Orachev, Egor and Epelbaum, Ilya and Azimov, Rustam and Grigorev, Semyon},
    year = {2020},
    month = {08},
    pages = {49-59},
    title = {Context-Free Path Querying by Kronecker Product},
    isbn = {978-3-030-54831-5},
    doi = {10.1007/978-3-030-54832-2_6}
}